#!/bin/sh

root=

#
# Try to find bzr fast export
#   1) bzr fast-export
#   2) bzr-fast-export.py
#   3) $HOME/.bazaar/plugins/fastimport/exporters/bzr-fast-export.py
#
bzr fast-export --help > /dev/null 2>&1; res=$?
if [ $res -eq 0 ]
then
	bzrfastexport="bzr fast-export"
else
	t="$HOME/.bazaar/plugins/fastimport/exporters/bzr-fast-export.py"
	bzr-fast-export.py --help > /dev/null 2>&1; res=$?
	if [ $res -eq 0 ]
	then
		bzrfastexport=bzr-fast-export.py
	elif [ -x $t ]
	then
		bzrfastexport="$t"
	else
                echo "Unable to locate bzr-fast-export.py"
                echo "Giving up!"
                exit 127
	fi
fi

set -e

git_dir() {
    git rev-parse --git-dir
}

check() {
    git rev-parse 2> /dev/null
    if [ $? -ne 0 ]
    then
	echo "Must be inside a git repository to work"
	exit 1
    fi
    up=`git rev-parse --show-cdup`
    if [ -z "$up" ]
    then
	up="."
    fi
    cd $up
    root=`pwd`
}

add() {
    check
    name=$1
    shift
    loc=$1
    shift
    map=$1
    if [ -z "$name" ] || [ -z "$loc" ]
    then
	echo "Usage: git bzr add name location [map]"
	exit 1
    fi
    
    if [ "`git config git-bzr.${name}.url`" ]
    then
	echo "There is alread a bazaar branch with that name"
	exit 1
    fi
    
    if [ ! -d "${loc}/.bzr" ]
    then
	echo "Remote is not a bazaar repository"
	exit 1
    fi

    git config git-bzr.${name}.location ${loc}
    if [ "$map" ]
    then
	git config git-bzr.${name}.map ${map}
    else
    	str=`cd ${loc} && bzr info | grep "shared repository: "`
	str=`echo $str | sed 's/shared repository: //'`
	if [ "$str" ]
	then
		map=`echo $str | sed 's/\//_/g' | sed 's!^_!!'`
	else
		map=${name}
	fi
    	git config git-bzr.${name}.map ${map}
    fi
    
    echo "Bazaar branch ${name} added (map: $map). You can fetch it with git bzr fetch ${name}"
}

get_location() {
    remote=$1
    l=`git config git-bzr.${remote}.location`
    if [ -z "$l" ]
    then
	echo "Cannot find bazaar remote with name ${remote}."
	exit
    fi
    echo $l
}

fetch() {
    check
    remote=$1
    if [ -z "$remote" ]
    then
	echo "Usage: git bzr fetch branchname"
	exit 1
    fi
    loc=`get_location $remote`
    
    dir=`git_dir`
    map=`git-config git-bzr.${remote}.map`
    git_map="$root/$dir/bzr-git/${map}-git-map"
    bzr_map="$root/$dir/bzr-git/${map}-bzr-map"
    
    if [ ! -f $git_map -a ! -f $bzr_map ]
    then
	echo "There doesn't seem to be an existing refmap. "
	echo "Doing an initial import"
	mkdir -p $root/$dir/bzr-git
	(${bzrfastexport} --export-marks=${bzr_map} --git-branch=bzr/${remote} ${loc}) |
	(git fast-import --export-marks=${git_map})
    elif [ -f $git_map -a -f $bzr_map ]
    then
	echo "Updating remote ${remote}"
	old_rev=""
	if [ -f "$root/$dir/refs/heads/bzr/${remote}" ]
	then
	    old_rev=`git rev-parse bzr/${remote}`
	fi
	(${bzrfastexport} --import-marks=${bzr_map} --export-marks=${bzr_map} --git-branch=bzr/${remote} ${loc} ) |
	(git fast-import --quiet --export-marks=${git_map} --import-marks=${git_map}) || true

	if [ "$old_rev" ]
	then
	    new_rev=`git rev-parse bzr/${remote}`
	    echo "Changes since last update:"
	    git shortlog ${old_rev}..${new_rev} | cat -
	fi
    else
	echo "One of the mapfiles is missing! Something went wrong!"
	exit 1
    fi
}
  
push() {
    check
    remote=$1
    if [ -z "$remote" ]
    then
	echo "Usage: git bzr fetch branchname"
	exit 1
    fi
    loc=`get_location $remote`
    
    dir=`git_dir`
    map=`git-config git-bzr.${remote}.map`
    git_map="$root/$dir/bzr-git/${map}-git-map"
    bzr_map="$root/$dir/bzr-git/${map}-bzr-map"
    
    if [ "`git rev-list --left-right HEAD...bzr/${remote} | sed -n '/^>/ p'`" ]
    then
	echo "HEAD is not a strict child of ${remote}, cannot push. Merge first"
	exit 1
    fi
    
    if [ -z "`git rev-list --left-right HEAD...bzr/${remote} | sed -n '/^</ p'`" ]
    then
	echo "Nothing to push. Commit something first"
	exit 0
    fi

    if [ ! -f $git_map -a ! -f $bzr_map ]
    then
	echo "We do not have refmapping yet. Then how can I push?"
	exit 1
    fi

    (git fast-export --import-marks=${git_map} --export-marks=${git_map} HEAD) |
    (cd ${loc} && bzr fast-import --import-marks=${bzr_map} --export-marks=${bzr_map} - )
}

cmd=$1
shift

case $cmd in
add) add $*;;
push) push $*;;
fetch) fetch $*;;
*) echo "Unknown command: $cmd"; exit 1;;
esac
